import { useFormik } from 'formik';
import { FC, useState } from 'react';
import styles from './knowGender.module.css';

interface IFormGender {
  name: string;
}

interface IGender {
  count: number;
  name: string;
  gender: string;
  probability: number;
}

const KnowGender: FC = () => {
  // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
  const [name, setName] = useState<IGender | undefined>(undefined);

  // —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç formik - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ —Ö—É–∫–∞ useFormik() —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
  const formik = useFormik({
    initialValues: {
      name: ''
    } as IFormGender,
    onSubmit: async (values: IFormGender, { resetForm }) => {
      // –≤—ã–∑–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å fetch –∑–∞–ø—Ä–æ—Å–æ–º
      const res = await fetch(`https://api.genderize.io/?name=${values.name}`);
      const data = await res.json();
      console.log(data);
      setName(data);
      resetForm();
    }
  });

  return (
    <>
      <span>‚ú® secret gender ‚ú®</span>
      <form onSubmit={formik.handleSubmit} className={styles.container}>
        <input id='name' value={formik.values.name} onChange={formik.handleChange} type="text" />
        <button type='submit'>know secret gender ü§î</button>
      </form>
      {/* –µ—Å–ª–∏ name?.name —Ä–∞–≤–µ–Ω false - —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã */}
      {name?.name && (
        <>
          <p>{name?.name} is {name?.gender} {name?.probability * 100}% ‚ö°Ô∏è</p>
        </>
      )}

    </>
  );
};

export default KnowGender;
