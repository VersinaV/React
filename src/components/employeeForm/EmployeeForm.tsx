import { useFormik } from 'formik';
import * as Yup from 'yup';
import Button from '../button/Button';
import Input from '../input/Input';
import styles from './employeeForm.module.css';
import { useNavigate } from 'react-router-dom';

interface IFormValues {
  name: string;
  surname: string;
  age: string;
  position: string;
  agreement: boolean;
}

const schema = Yup.object().shape({
  name: Yup.string().required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ').min(2, '–º–∏–Ω–∏–º—É–º 2 –∑–Ω–∞–∫a').max(50, '–º–∞–∫—Å–∏–º—É–º 50 –∑–Ω–∞–∫–æ–≤'),
  surname: Yup.string().required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ').min(2, '–º–∏–Ω–∏–º—É–º 2 –∑–Ω–∞–∫a').max(50, '–º–∞–∫—Å–∏–º—É–º 15 –∑–Ω–∞–∫–æ–≤'),
  age: Yup.number()
    .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ')
    .typeError('—ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ')
    .min(18, '18+ üîû')
    .test('check length', '–≤—Ä—è–¥ –ª–∏ –≤–∞–º –±–æ–ª—å—à–µ 1000 –ª–µ—Ç', (value) => String(value).length <= 3),
  position: Yup.string().required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ').max(30, '–º–∞–∫—Å–∏–º—É–º 50 –∑–Ω–∞–∫–æ–≤'),
  agreement: Yup.boolean().oneOf([true], '–ü—Ä–∏–º–∏—Ç–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ')
});


export default function EmployeeForm() {
  // —Ö—É–∫ useNavigate() –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞—Å –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  // –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å—Å—ã–ª–∫–µ –æ–Ω –º–æ–∂–µ—Ç —Å—Ä–∞–±–æ—Ç–∞—Ç—å –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –∫–∞–∫–æ–≥–æ-—Ç–æ –Ω–∞–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π
  const navigate = useNavigate()

  const formik = useFormik({
    initialValues: {
      name: '',
      surname: '',
      age: '',
      position: '',
      agreement: false
    } as IFormValues,
    validationSchema: schema,
    validateOnChange: false,
    onSubmit: (values: IFormValues) => {
      console.log(values);
      // –≤—ã–∑—ã–≤–∞–µ–º navigate —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–æ–º–∞—à–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      // –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
      navigate('/')
    }
  });

  const agreementError = formik.errors.agreement

  return (
    <form onSubmit={formik.handleSubmit} className={styles.container}>
      <Input value={formik.values.name} name='name' onChange={formik.handleChange} placeholder='name' error={formik.errors.name} />
      <Input value={formik.values.surname} name='surname' onChange={formik.handleChange} placeholder='surname' error={formik.errors.surname} />
      <Input value={formik.values.age} name='age' onChange={formik.handleChange} placeholder='age' error={formik.errors.age} />
      <Input value={formik.values.position} name='position' onChange={formik.handleChange} placeholder='position' error={formik.errors.position} />
      <div>
        <label htmlFor="">–Ø —Å–æ–≥–ª–∞—Å–µ–Ω üòÖ</label>
        <input checked={formik.values.agreement} name='agreement' onChange={formik.handleChange} type="checkbox" id="" />
        <span className={styles.error}>{agreementError && agreementError}</span>
      </div>
      <Button disabled={!formik.values.agreement} name='–¥–∞' type='submit' />
    </form>
  );
}
